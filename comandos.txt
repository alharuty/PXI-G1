COMANDOS

venv\Scripts\activate.bat
source venv/Scripts/activate


C:\Users\admin\Desktop\Proyecto_11\PXI-G1\venv\Scripts\Activate.ps1

Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
.\venv\Scripts\activate
.\\venv\\Scripts\\Activate


python -m venv venv
ctrl j

pip freeze > requirements.txt
pip install -r requirements.txt

EN EL CODIGO, COMENTA CADA LINEA EXPLICANDO PARA QUE SIRVE, DONDE COMO CUANDO Y PORQUE, explicalo de manera sencilla 
PON TITULOS COMENTADOS A LOS CODIGOS, Y HAS UN INDICE COMENTADO EN LOS CODIGOS PARA SABER EL ORDEN DE LOS PASOS QUE SE FUERON SIGUIENT.
DEBAJO DE CADA CODIGO, JUSTO POR DEBAJO, SIN ELIMINAR NADA. REALIZA UN CUADRO COMPARATIVO DE LO EMPLEADO, FUNCION, PARA QUE SIRVE, EL ANTES Y EL DESPUES DEL EMPLEO
EXPLICA CON EJEMPLOS PARA que personas sin experiencia puedan entenderlo,  DE QUE SE TRATA EL CODIGO Y HAS UN CUENTO ENTENDIBLE DE LOS CODIGOS.



#############################################
# ÍNDICE DE COMANDOS PARA EL PROYECTO
# 1. Crear entorno virtual
# 2. Activar entorno virtual
# 3. Instalar dependencias
# 4. Guardar dependencias
# 5. Ejecutar backend (FastAPI)
# 6. Ejecutar frontend (servidor local)
#############################################

#######################################################
# 1. CREAR ENTORNO VIRTUAL
#######################################################
python -m venv venv
# Crea un entorno virtual llamado "venv" para aislar las dependencias del proyecto.
# Se usa una sola vez al iniciar el proyecto.

#######################################################
# 2. ACTIVAR ENTORNO VIRTUAL
#######################################################
# En Windows (CMD):
venv\Scripts\activate.bat
# En Windows (PowerShell):
.\venv\Scripts\activate
# En Mac/Linux:
source venv/bin/activate
# Activa el entorno virtual para instalar y usar paquetes solo en este proyecto.

#######################################################
# 3. INSTALAR DEPENDENCIAS
#######################################################
pip install -r requirements.txt
# Instala todas las librerías necesarias listadas en requirements.txt.

#######################################################
# 4. GUARDAR DEPENDENCIAS
#######################################################
pip freeze > requirements.txt
# Guarda todas las librerías instaladas en el entorno virtual en el archivo requirements.txt.

#######################################################
# 5. EJECUTAR BACKEND (FASTAPI)
#######################################################
# Desde la carpeta donde está main.py (por ejemplo, backend):
uvicorn main:app --reload
# Inicia el servidor backend en modo desarrollo. El parámetro --reload recarga el servidor al hacer cambios en el código.
